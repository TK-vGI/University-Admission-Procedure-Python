def print_output(applicants_by_gpa: list, m: int) -> None:
    print("Successful applicants:")
    if m <= len(applicants_by_gpa):
        for i in range(m):
            print(applicants_by_gpa[i][0])
    else:
        print("Unsufficient applicants:")

def sort_by_gpa(applicants: list) -> list: #  calculate Grade Point Average
    sorted_by_gpa = sorted(applicants, key=lambda x: (-x[1], x[0]))
    # # Debug
    # print("\nDebug - sorted applicants:")
    # for name, grade in sorted_gpa:
    #     print(f"{name},{grade:.2f}")

    return sorted_by_gpa

def main():
    # N integer representing the total number of applicants
    number_of_applicants = int(input())

    # M integer representing the number of applicants that should be accepted to the university
    allowed_applicants = int(input())

    total_applicants = []
    for _ in range(number_of_applicants):
        temp_ = input().split(' ')
        # name = " ".join(temp_[0:2])
        # grade = float(temp_[-1])
        # total_applicants.append([name,grade])
        total_applicants.append([" ".join(temp_[0:2]),float(temp_[-1])])

    # # Debug
    # print("Debug - unsorted applicants:")
    # for name, grade in total_applicants:
    #     print(f"{name},{grade:.2f}")

    # Sort list of applicant by Grade Point Average
    success_applicants = sort_by_gpa(total_applicants)

    # Output result according to score
    print_output(success_applicants, allowed_applicants)


if __name__ == '__main__':
    main()